Description: "Buildkite Elastic Mac"

Parameters:
  HostFamily:
    Type: String
    Description: Host type to provision, e.g. mac1 for mac1.metal.
    Default: "mac2"

  InstanceType:
    Type: String
    Description: Instance type to provision, e.g. mac1.metal.
    Default: "mac2.metal"

  ImageId:
    Type: AWS::EC2::Image::Id
    Description: EC2 AMI to boot on the dedicated hosts. Expects auto-login for the ec2-user to be configured.

  RootVolumeSize:
    Type: Number
    Description: Root volume size in GiB.

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets to launch dedicated instances in.

  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: The VPC security groups to associate with the network interface of launched instances.

  MinSize:
    Type: Number
    Description: Minimum number of instances to boot.
    Default: 0

  MaxSize:
    Type: Number
    Description: Maximum number of instances to boot.
    Default: 1

  KeyName:
    Description: Optional - SSH keypair used to access the buildkite instances via ec2_user, setting this will enable SSH ingress
    Type: String
    Default: ""

  EnableCostAllocationTags:
    Type: String
    Description: Enables AWS Cost Allocation tags for all resources in the stack. See https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  CostAllocationTagName:
    Type: String
    Description: The name of the Cost Allocation Tag used for billing purposes
    Default: "CreatedBy"

  CostAllocationTagValue:
    Type: String
    Description: The value of the Cost Allocation Tag used for billing purposes
    Default: "buildkite-elastic-ci-stack-for-aws"

  InstanceName:
    Type: String
    Description: Optional - Customise the EC2 instance Name tag
    Default: "buildkite-agent"

  BuildkiteQueue:
    Type: String
    Description: Optional - Name of the queue used by this agent to receive pipeline jobs
    Default: "mac"

Conditions:
  HasKeyName:
      !Not [ !Equals [ !Ref KeyName, "" ] ]

  UseCostAllocationTags:
      !Equals [ !Ref EnableCostAllocationTags, "true" ]

Outputs:
  ResourceGroupId:
    Description: Dedicated resource group ID.
    Value: !GetAtt DedicatedHostGroup.Arn

Resources:
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                    "Service": "ec2.amazonaws.com"
                }
            }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Path: /

  IAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref IAMRole

  DedicatedHostGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: !Ref AWS::StackName
      Configuration:
        - Type: AWS::EC2::HostManagement
          Parameters:
            - Name: any-host-based-license-configuration
              Values:
                - true
            - Name: allowed-host-families
              Values: [ !Ref HostFamily ]
            - Name: auto-allocate-host
              Values:
                - true
            - Name: auto-release-host
              Values:
                - true
        - Type: AWS::ResourceGroups::Generic
          Parameters:
            - Name: allowed-resource-types
              Values:
                - AWS::EC2::Host
            - Name: deletion-protection
              Values:
                - UNLESS_EMPTY

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref ImageId
        InstanceType: !Ref InstanceType
        KeyName: !If [ "HasKeyName", !Ref KeyName, !Ref 'AWS::NoValue' ]
        Placement:
          HostResourceGroupArn: !GetAtt DedicatedHostGroup.Arn
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeSize: !Ref RootVolumeSize
              VolumeType: gp2
        SecurityGroupIds: !Ref SecurityGroupIds
        IamInstanceProfile:
          Arn: !GetAtt IAMInstanceProfile.Arn
        TagSpecifications:
            - ResourceType: instance
              Tags:
                - Key: Role
                  Value: buildkite-agent
                - Key: Name
                  Value: !Ref InstanceName
                - Key: BuildkiteQueue
                  Value: !Ref BuildkiteQueue
                - !If
                  - UseCostAllocationTags
                  - Key: !Ref CostAllocationTagName
                    Value: !Ref CostAllocationTagValue
                  - !Ref "AWS::NoValue"

  AutoScaleGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref Subnets
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
